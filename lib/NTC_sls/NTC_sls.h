/*
 * Created: 28.11.2021 0:45:50
 * Author: slaventiis
 * Пример использования в REDME_NTC_sls.md
 * #include "NTC_sls.h" (+771 bytes Flash +0 bytes RAM) for stm8s
 */  


// #include <Arduino.h>
// #include <avr/pgmspace.h>
// #include <avr/delay.h>

#include "stm8s.h"

// Расскоментировать с какими датчиками работаем и по какой схемме подключения
#define ARDUINO_10K_3950_RA10
// #define ARDUINO_10K_3950_RA5
// #define EPCOS_B57164K0103J001
// #define NTC_3950_100k_GLASS_DROP_RA10 // Стеклянная капля для экструдера 3д принтера

#if defined(ARDUINO_10K_3950_RA10)
/* Таблица суммарного значения АЦП (*16) в зависимости от температуры. От большего значения к меньшему
   Для построения таблицы использованы следующие парамертры:
     R1(T1): 10кОм(25°С) temp от-40 до+150, шаг 5
     Таблица R/T характеристик: NTC 10k 3950 Arduino, значения взяты из: 103_3950_lookuptable arduino.pdf
     Схема включения: Ra(+) Rt(gnd) средняя точка к контроллеру
     Ra: 10кОм
*/
const uint16_t table_arduino_10k_3950_Ra10[] = {
	15808,15648,15408,15088,14704,14256,13728,13136,12464,11696,
	10864,9984,9088,8192,7312,6480,5696,4976,4336,3760,
	3248,2800,2416,2096,1808,1568,1360,1184,1040,912,
	800,688,608,528,464,416,368,320,288	// 39 элементов (включая 0)
};
#endif // ARDUINO_10K_3950_RA10

#if defined(ARDUINO_10K_3950_RA5)
/* Таблица суммарного значения АЦП (*16) в зависимости от температуры. От большего значения к меньшему
   Для построения таблицы использованы следующие парамертры:
     R1(T1): 10кОм(25°С) temp от-40 до+150, шаг 5
     Таблица R/T характеристик: NTC 10k 3950 Arduino, значения взяты из: 103_3950_lookuptable arduino.pdf
     Схема включения: Ra(+) Rt(gnd) средняя точка к контроллеру
     Ra: 5кОм
*/
const uint16_t table_arduino_10k_3950_Ra5[] PROGMEM = {
16096,16000,15872,15712,15504,15248,14944,14576,14160,13648,
13072,12416,11696,10928,10112,9280,8448,7632,6848,6112,
5424,4784,4224,3712,3264,2864,2512,2208,1952,1712,
1504,1328,1168,1024,912,800,704,624,560	// 39 элементов (включая 0)
};
#endif // ARDUINO_10K_3950_RA5

#if defined(NTC_3950_100k_GLASS_DROP_RA10)
/* Таблица суммарного значения АЦП (*16) в зависимости от температуры. От большего значения к меньшему
   Для построения таблицы использованы следующие парамертры:
     R1(T1): 100кОм(25°С) temp от-30 до+300, шаг 5
     Таблица R/T характеристик: 
     Схема включения: Ra(+) Rt(gnd) средняя точка к контроллеру
     Ra: 10кОм
*/
const uint16_t table_NTC_3950_100k_GLASS_DROP_Ra10[] PROGMEM = {
16288,16256,16208,16160,16096,16000,15904,15760,15600,15408,
15168,14896,14576,14224,13808,13344,12816,12288,11696,11088,
10432,9760,9120,8448,7808,7168,6576,6048,5520,5008,
4560,4096,3728,3360,3040,2736,2464,2240,2032,1840,
1648,1488,1344,1216,1104,992,896,832,752,688,
624,576,528,480,432,400,368,336,320,288,
272,240,224,208,192,192,176 // 67 элементов (включая 0)
};
#endif // NTC_3950_100k_GLASS_DROP_RA10

#if defined(EPCOS_B57164K0103J001)
/* Таблица суммарного значения АЦП (*16) в зависимости от температуры. От большего значения к меньшему
   Для построения таблицы использованы следующие парамертры:
     R1(T1): 10кОм(25°С) temp от-40 до+150, шаг 5
     Таблица R/T характеристик: EPCOS R/T:2904; B25/100:4300K взяты из дадашита, 
		 ЗНАЧЕНИЯ ОТ +125 до +150 ПОДОБРАНЫ ИМПИРИЧЕСКИ
     Схема включения: Ra(+) Rt(gnd) средняя точка к контроллеру
     Ra: 10кОм
*/
const uint16_t table_EPCOS_B57164K0103J001[] PROGMEM = {
16000,15856,15664,15392,15072,14656,14144,13520,12784,11968,
11072,10128,9168,8192,7248,6352,5520,4768,4096,3504,
2992,2560,2176,1856,1584,1344,1152,992,848,736,
640,544,480,416,368,320,288,256,224 // 39 элементов (включая 0)
};
#endif // EPCOS_B57164K0103J001


/* 
 * Функция вычисляет значение температуры в десятых долях градусов Цельсия
 * в зависимости от суммарного(*16) значения АЦП. Полученный результат 
 * преобразовываем во float, делим на 10 и получаем число с десятыми
 * --- 
 * adcsum - сумма 16 значений АЦП,
 * *table - массив значений(16х) АЦП термистора при разных температурах,
 * size - размер массива table в байтах.
 * tmp_under - нижняя температура
 * tmp_over - верхняя температура
 * table_step - шаг температуры в массиве
 * ---
 * При обрыве датчика: вернет -7777
 * При к.з. датчика: вернет 7777
 */
int16_t calc_temperature (uint16_t  adcsum, const uint16_t *table, uint8_t size, int16_t tmp_under, int16_t tmp_over, int8_t table_step) {
	uint8_t l = 0;
	#define NTC_OVER	7777
	#define NTC_UNDER	-7777
	uint8_t r = (size / sizeof(&table[0])) - 1;
	/*
		r = размер таблицы / размер первого числа в таблице(самого большого) -1
		r = 16*38 / 16 -1 = 38 это колличество элементов в массиве (включая 0)
	*/
	uint16_t thigh = table[r]; // Считываем и запоминаем последний элемент в массиве // 288
	
	// Проверка выхода за пределы и граничных значений
	if (adcsum < thigh)	return NTC_OVER; // Вернем значение ошибки (короткое замыкание датчика)
	else if(adcsum == thigh) return tmp_over; // Вернем максимальное значение

	uint16_t  tlow = table[0]; // 15808

	if (adcsum > tlow)	return NTC_UNDER; // Вернем значение ошибки (обрыв датчика)
	else if (adcsum >= tlow) return tmp_under; // Вернем минимальное значение

	// Двоичный поиск по таблице
	while ((r - l) > 1) {
		uint8_t  m = (l + r) >> 1;
		uint16_t  mid = table[m];
		if (adcsum > mid)	r = m; 
		else l = m;
	}		
	/*
		Каррроче этот поиск, по хитрому двоичному алгоритму выискивает ближайшие большее и
		ближайшее меньшее по значению числу adcsum и записывает номер позиции этих значений
		в массиве в переменные: r - меньший номер. l - больший номер
	*/
	uint16_t  vl = table[l];	// Большее значение [13] 8192 (25 гардусов)
	if (adcsum >= vl) return l * table_step + tmp_under;

	uint16_t  vr = table[r];	// Меньшее значение [14] 7312 (30 гардусов)
	uint16_t  vd = vl - vr;										// Разница 8192 - 7312 = 880
	int32_t temp = tmp_under + r * table_step;	// -400 + 14 * 50 = 300
	
	if (vd) {
		//--------------------- Линейная интерполяция ------------------------------------
		temp -= ((table_step * (int32_t)(adcsum - vr) + (vd >> 1)) / vd); // 300 - ((50 * 7500 - 7312 + (880 / 2)) / 880) = неполучается!!!
	}
	return temp;
}

/*
Функция весит:
с массивом table_arduino_10k_3950_Ra10 - (220 bytes Flash AVR) (771 bytes Flash STM) 
с массивом table_NTC_3950_100k_GLASS_DROP_Ra10 - 276 bytes Flash
c двумя массивами 614 bytes Flash
0 bytes RAM.
Время выполнения calc_temperature table_arduino_10k_3950_Ra10 = 14 microsecond
Время выполнения calc_temperature table_NTC_3950_100k_GLASS_DROP_Ra10 = 16 microsecond
*/